# The Docker image that will be used to build your app
stages:
    - build
    - deploy

variables:
    IMAGE_TAG: chat-backend

build_image:
    stage: build
    image: docker:24.0.7-cli
    services:
        - docker:24.0.7-dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
    before_script:
        - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    script:
        - docker pull $CI_REGISTRY_IMAGE || true
        - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG ./Chat
        - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG


deploy:
    stage: deploy
    before_script:
        - chmod 0400 $SSH_KEY
    script:
        - ssh -i $SSH_KEY -o StrictHostKeyChecking=no calincatalin99@34.139.55.205 "
            sudo rm -r ~/Chat || true &&
            mkdir Chat || true"
        - scp -r -i $SSH_KEY -o StrictHostKeyChecking=no ./Chat/db calincatalin99@34.139.55.205:~/Chat
        - scp -i $SSH_KEY -o StrictHostKeyChecking=no ./Chat/docker-compose.production.yml calincatalin99@34.139.55.205:~/Chat/
        - scp -i $SSH_KEY -o StrictHostKeyChecking=no ./Chat/script.sh calincatalin99@34.139.55.205:~/Chat/
        - ssh -i $SSH_KEY -o StrictHostKeyChecking=no calincatalin99@34.139.55.205 "
            docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY &&
            docker stop chat-backend || true &&
            docker rm chat-backend || true &&
            docker rmi $CI_REGISTRY_IMAGE:$IMAGE_TAG || true &&
            docker pull $CI_REGISTRY_IMAGE || true &&
            CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE IMAGE_TAG=$IMAGE_TAG docker-compose -f ~/Chat/docker-compose.production.yml up -d chat-app-backend"
        - ssh -i $SSH_KEY -o StrictHostKeyChecking=no calincatalin99@34.139.55.205 "
            sudo bash ./Chat/script.sh chat-db db4"